!function(l,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((l="undefined"!=typeof globalThis?globalThis:l||self).advancedAnalyserNode={})}(this,(function(l){"use strict";var t,a,e;!function(l){l[l.start=0]="start",l[l.stop=1]="stop",l[l.updateProcessorOptions=2]="updateProcessorOptions",l[l.frequencyDataAvailable=3]="frequencyDataAvailable",l[l.byteFrequencyDataAvailable=4]="byteFrequencyDataAvailable",l[l.timeDomainDataAvailable=5]="timeDomainDataAvailable",l[l.byteTimeDomainDataAvailable=6]="byteTimeDomainDataAvailable",l[l.getFloatFrequencyData=7]="getFloatFrequencyData",l[l.requestedFloatFrequencyDataAvailable=8]="requestedFloatFrequencyDataAvailable",l[l.getByteFrequencyData=9]="getByteFrequencyData",l[l.requestedByteFrequencyDataAvailable=10]="requestedByteFrequencyDataAvailable",l[l.getFloatTimeDomainData=11]="getFloatTimeDomainData",l[l.requestedFloatTimeDomainDataAvailable=12]="requestedFloatTimeDomainDataAvailable",l[l.getByteTimeDomainData=13]="getByteTimeDomainData",l[l.requestedByteTimeDomainDataAvailable=14]="requestedByteTimeDomainDataAvailable",l[l.startedListeningTo=15]="startedListeningTo",l[l.stoppedListeningTo=16]="stoppedListeningTo"}(t||(t={})),function(l){l.fftSize="fftSize",l.samplesBetweenTransforms="samplesBetweenTransforms",l.timeDomainSamplesCount="timeDomainSamplesCount",l.windowFunction="windowFunction",l.minDecibels="minDecibels",l.maxDecibels="maxDecibels",l.smoothingTimeConstant="smoothingTimeConstant"}(a||(a={})),function(l){l.rectangular="rectangular",l.blackman="blackman",l.nuttall="nuttall",l.blackmanNuttall="blackman-nuttall",l.blackmanHarris="blackman-harris",l.hann="hann",l.hamming="hamming",l.bartlett="bartlett"}(e||(e={}));"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;var d={exports:{}};!function(l,t){!function(l){const t=32768,a=32;var e;l.FrequencyScale=void 0,(e=l.FrequencyScale||(l.FrequencyScale={})).linear="linear",e.logarithmic="logarithmic",l.MAX_FFT_SIZE=t,l.MIN_FFT_SIZE=a,Object.defineProperty(l,"__esModule",{value:!0})}(t)}(0,d.exports);const s=(l,t)=>{if(t<=l)throw new Error(`Values ${l} for minDecibels and ${t} for maxDecibels are invalid: maxDecibels value cannot be equal or lower than minDecibels.`)};class b extends AudioWorkletNode{_portMapId=0;_portMap=new Map;_fftSize=2048;_samplesBetweenTransforms;_timeDomainSamplesCount;_windowFunction;_minDecibels;_maxDecibels;_smoothingTimeConstant;channelCount;numberOfInputs;numberOfOutputs;channelCountMode;channelInterpretation;get fftSize(){return this._fftSize}set fftSize(l){(l=>{if(l&&0!=(l&l-1))throw new Error(`${l} is not a valid fftSize. fftSize has to be a power of 2`);if(l>d.exports.MAX_FFT_SIZE)throw new Error(`${l} is above the maximum fftSize. Maximum fftSize is ${d.exports.MAX_FFT_SIZE}`);if(l<d.exports.MIN_FFT_SIZE)throw new Error(`${l} is below the minimum fftSize. Maximum fftSize is ${d.exports.MIN_FFT_SIZE}`)})(l),this._fftSize=l,this._postMessage({type:t.updateProcessorOptions,payload:{fftSize:l,...this._samplesBetweenTransforms?{}:{samplesBetweenTransforms:l},...this._timeDomainSamplesCount?{}:{timeDomainSamplesCount:l}}})}set samplesBetweenTransforms(l){(l=>{if(l<=0)throw new Error(`${l} is not a valid samplesBetweenTransform. samplesBetweenTransform needs to be above 0`)})(l),this._samplesBetweenTransforms=l,this._updateProcessorOptions({samplesBetweenTransforms:l})}get samplesBetweenTransforms(){return this._samplesBetweenTransforms||this.fftSize}get frequencyBinCount(){return this.fftSize/2}set timeDomainSamplesCount(l){(l=>{if(l<=0)throw new Error(`${l} is not a valid timeDomainSamplesCount. timeDomainSamplesCount needs to be above 0`)})(l),this._timeDomainSamplesCount=l,this._updateProcessorOptions({timeDomainSamplesCount:l})}get timeDomainSamplesCount(){return this._timeDomainSamplesCount||this.fftSize}set windowFunction(l){(l=>{if(!Object.values(e).includes(l))throw new Error(`${l} is not a valid windowFunction. Possible window functions are ${Object.values(e).map((l=>`'${l}'`)).join(", ")}`)})(l),this._windowFunction=l,this._updateProcessorOptions({windowFunction:l})}get windowFunction(){return this._windowFunction}get minDecibels(){return this._minDecibels}set minDecibels(l){s(l,this._maxDecibels),this._minDecibels=l,this._updateProcessorOptions({minDecibels:l})}get maxDecibels(){return this._maxDecibels}set maxDecibels(l){s(this._minDecibels,l),this._maxDecibels=l,this._updateProcessorOptions({maxDecibels:l})}get smoothingTimeConstant(){return this._smoothingTimeConstant}set smoothingTimeConstant(l){(l=>{if(l<0&&l>1)throw new Error("smoothingTimeConstant value must be between 0 and 1")})(l),this._smoothingTimeConstant=l,this._updateProcessorOptions({smoothingTimeConstant:l})}_eventListenersCount={frequencydata:[],bytefrequencydata:[],timedomaindata:[],bytetimedomaindata:[]};constructor(l,t){const{fftSize:d=2048,samplesBetweenTransforms:s,timeDomainSamplesCount:b,windowFunction:m=e.blackman,minDecibels:X=-100,maxDecibels:n=-30,smoothingTimeConstant:Z=0}=t;super(l,"AdvancedAnalyserProcessor",{processorOptions:{[a.fftSize]:d,[a.samplesBetweenTransforms]:s||d,[a.timeDomainSamplesCount]:b||d,[a.windowFunction]:m,[a.minDecibels]:X,[a.maxDecibels]:n,[a.smoothingTimeConstant]:Z},numberOfInputs:1,numberOfOutputs:1,channelCount:1,channelCountMode:"max",channelInterpretation:"speakers"}),this.fftSize=d,void 0!==s&&(this.samplesBetweenTransforms=s),void 0!==b&&(this.timeDomainSamplesCount=b),this.windowFunction=m,this.minDecibels=X,this.maxDecibels=n,this.smoothingTimeConstant=Z,this.port.onmessage=l=>this._onmessage(l.data)}_uniqId(){return this._portMapId++}_postMessage(l,t){this.port.postMessage(l,t)}onprocessorerror=l=>{console.log(`An error from AudioWorkletProcessor.process() occurred: ${l}`)};_onmessage(l){switch(l.type){case t.frequencyDataAvailable:this.dispatchEvent(new CustomEvent("frequencydata",{detail:new Float32Array(l.payload)}));break;case t.byteFrequencyDataAvailable:this.dispatchEvent(new CustomEvent("bytefrequencydata",{detail:new Uint8Array(l.payload)}));break;case t.timeDomainDataAvailable:this.dispatchEvent(new CustomEvent("timedomaindata",{detail:new Float32Array(l.payload)}));break;case t.byteTimeDomainDataAvailable:this.dispatchEvent(new CustomEvent("bytetimedomaindata",{detail:new Uint8Array(l.payload)}));break;case t.requestedFloatFrequencyDataAvailable:case t.requestedByteFrequencyDataAvailable:case t.requestedFloatTimeDomainDataAvailable:case t.requestedByteTimeDomainDataAvailable:{const{id:t,payload:a}=l,e=this._portMap.get(t);this._portMap.delete(t),e(a);break}}}_updateProcessorOptions(l){this._postMessage({type:t.updateProcessorOptions,payload:l})}_postIdentifiedDataRequest(l){return new Promise((t=>{const a=this._uniqId();this._portMap.set(a,(l=>t(l))),this._postMessage({id:a,type:l})}))}async getFloatFrequencyData(){return new Float32Array(await this._postIdentifiedDataRequest(t.getFloatFrequencyData))}async getByteFrequencyData(){return new Uint8Array(await this._postIdentifiedDataRequest(t.getByteFrequencyData))}async getFloatTimeDomainData(){return new Float32Array(await this._postIdentifiedDataRequest(t.getFloatTimeDomainData))}async getByteTimeDomainData(){return new Uint8Array(await this._postIdentifiedDataRequest(t.getByteTimeDomainData))}_pushEventListener(l,a){const e=this._eventListenersCount[l];e.push(a),1===e.length&&this._postMessage({type:t.startedListeningTo,payload:l})}_removeEventListener(l,a){const e=this._eventListenersCount[l],d=e.indexOf(a);-1!==d&&(e.splice(d,1),0===e.length&&this._postMessage({type:t.stoppedListeningTo,payload:l}))}addEventListener(l,t,a){super.addEventListener(l,t,a),"processorerror"!==l&&this._pushEventListener(l,t)}removeEventListener(l,t,a){super.removeEventListener(l,t,a),"processorerror"!==l&&this._removeEventListener(l,t)}}var m=Object.freeze({__proto__:null,AdvancedAnalyserNode:b});l.createAdvancedAnalyserNode=async(l,t={})=>{{const a="data:application/javascript;base64,";await l.audioWorklet.addModule(a);return new(0,(await Promise.resolve().then((function(){return m}))).AdvancedAnalyserNode)(l,{...t})}},Object.defineProperty(l,"__esModule",{value:!0})}));
