!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).advancedAnalyserProcessor={})}(this,(function(t){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function e(t){if(this.size=0|t,this.size<=1||0!=(this.size&this.size-1))throw new Error("FFT size must be a power of two and bigger than 1");this._csize=t<<1;for(var e=new Array(2*this.size),a=0;a<e.length;a+=2){const t=Math.PI*a/this.size;e[a]=Math.cos(t),e[a+1]=-Math.sin(t)}this.table=e;for(var i=0,s=1;this.size>s;s<<=1)i++;this._width=i%2==0?i-1:i,this._bitrev=new Array(1<<this._width);for(var n=0;n<this._bitrev.length;n++){this._bitrev[n]=0;for(var o=0;o<this._width;o+=2){var r=this._width-o-2;this._bitrev[n]|=(n>>>o&3)<<r}}this._out=null,this._data=null,this._inv=0}var a=e;e.prototype.fromComplexArray=function(t,e){for(var a=e||new Array(t.length>>>1),i=0;i<t.length;i+=2)a[i>>>1]=t[i];return a},e.prototype.createComplexArray=function(){const t=new Array(this._csize);for(var e=0;e<t.length;e++)t[e]=0;return t},e.prototype.toComplexArray=function(t,e){for(var a=e||this.createComplexArray(),i=0;i<a.length;i+=2)a[i]=t[i>>>1],a[i+1]=0;return a},e.prototype.completeSpectrum=function(t){for(var e=this._csize,a=e>>>1,i=2;i<a;i+=2)t[e-i]=t[i],t[e-i+1]=-t[i+1]},e.prototype.transform=function(t,e){if(t===e)throw new Error("Input and output buffers must be different");this._out=t,this._data=e,this._inv=0,this._transform4(),this._out=null,this._data=null},e.prototype.realTransform=function(t,e){if(t===e)throw new Error("Input and output buffers must be different");this._out=t,this._data=e,this._inv=0,this._realTransform4(),this._out=null,this._data=null},e.prototype.inverseTransform=function(t,e){if(t===e)throw new Error("Input and output buffers must be different");this._out=t,this._data=e,this._inv=1,this._transform4();for(var a=0;a<t.length;a++)t[a]/=this.size;this._out=null,this._data=null},e.prototype._transform4=function(){var t,e,a=this._out,i=this._csize,s=1<<this._width,n=i/s<<1,o=this._bitrev;if(4===n)for(t=0,e=0;t<i;t+=n,e++){const a=o[e];this._singleTransform2(t,a,s)}else for(t=0,e=0;t<i;t+=n,e++){const a=o[e];this._singleTransform4(t,a,s)}var r=this._inv?-1:1,l=this.table;for(s>>=2;s>=2;s>>=2){var h=(n=i/s<<1)>>>2;for(t=0;t<i;t+=n)for(var f=t+h,u=t,m=0;u<f;u+=2,m+=s){const t=u,e=t+h,i=e+h,s=i+h,n=a[t],o=a[t+1],f=a[e],_=a[e+1],c=a[i],p=a[i+1],y=a[s],d=a[s+1],b=n,D=o,g=l[m],T=r*l[m+1],F=f*g-_*T,v=f*T+_*g,A=l[2*m],w=r*l[2*m+1],q=c*A-p*w,M=c*w+p*A,C=l[3*m],S=r*l[3*m+1],B=y*C-d*S,I=y*S+d*C,L=b+q,z=D+M,P=b-q,x=D-M,k=F+B,O=v+I,N=r*(F-B),W=r*(v-I),E=L+k,R=z+O,U=L-k,j=z-O,Z=P+W,H=x-N,X=P-W,V=x+N;a[t]=E,a[t+1]=R,a[e]=Z,a[e+1]=H,a[i]=U,a[i+1]=j,a[s]=X,a[s+1]=V}}},e.prototype._singleTransform2=function(t,e,a){const i=this._out,s=this._data,n=s[e],o=s[e+1],r=s[e+a],l=s[e+a+1],h=n+r,f=o+l,u=n-r,m=o-l;i[t]=h,i[t+1]=f,i[t+2]=u,i[t+3]=m},e.prototype._singleTransform4=function(t,e,a){const i=this._out,s=this._data,n=this._inv?-1:1,o=2*a,r=3*a,l=s[e],h=s[e+1],f=s[e+a],u=s[e+a+1],m=s[e+o],_=s[e+o+1],c=s[e+r],p=s[e+r+1],y=l+m,d=h+_,b=l-m,D=h-_,g=f+c,T=u+p,F=n*(f-c),v=n*(u-p),A=y+g,w=d+T,q=b+v,M=D-F,C=y-g,S=d-T,B=b-v,I=D+F;i[t]=A,i[t+1]=w,i[t+2]=q,i[t+3]=M,i[t+4]=C,i[t+5]=S,i[t+6]=B,i[t+7]=I},e.prototype._realTransform4=function(){var t,e,a=this._out,i=this._csize,s=1<<this._width,n=i/s<<1,o=this._bitrev;if(4===n)for(t=0,e=0;t<i;t+=n,e++){const a=o[e];this._singleRealTransform2(t,a>>>1,s>>>1)}else for(t=0,e=0;t<i;t+=n,e++){const a=o[e];this._singleRealTransform4(t,a>>>1,s>>>1)}var r=this._inv?-1:1,l=this.table;for(s>>=2;s>=2;s>>=2){var h=(n=i/s<<1)>>>1,f=h>>>1,u=f>>>1;for(t=0;t<i;t+=n)for(var m=0,_=0;m<=u;m+=2,_+=s){var c=t+m,p=c+f,y=p+f,d=y+f,b=a[c],D=a[c+1],g=a[p],T=a[p+1],F=a[y],v=a[y+1],A=a[d],w=a[d+1],q=b,M=D,C=l[_],S=r*l[_+1],B=g*C-T*S,I=g*S+T*C,L=l[2*_],z=r*l[2*_+1],P=F*L-v*z,x=F*z+v*L,k=l[3*_],O=r*l[3*_+1],N=A*k-w*O,W=A*O+w*k,E=q+P,R=M+x,U=q-P,j=M-x,Z=B+N,H=I+W,X=r*(B-N),V=r*(I-W),G=E+Z,J=R+H,K=U+V,Q=j-X;if(a[c]=G,a[c+1]=J,a[p]=K,a[p+1]=Q,0!==m){if(m!==u){var Y=U+-r*V,$=-j+-r*X,tt=E+-r*Z,et=-R- -r*H,at=t+f-m,it=t+h-m;a[at]=Y,a[at+1]=$,a[it]=tt,a[it+1]=et}}else{var st=E-Z,nt=R-H;a[y]=st,a[y+1]=nt}}}},e.prototype._singleRealTransform2=function(t,e,a){const i=this._out,s=this._data,n=s[e],o=s[e+a],r=n+o,l=n-o;i[t]=r,i[t+1]=0,i[t+2]=l,i[t+3]=0},e.prototype._singleRealTransform4=function(t,e,a){const i=this._out,s=this._data,n=this._inv?-1:1,o=2*a,r=3*a,l=s[e],h=s[e+a],f=s[e+o],u=s[e+r],m=l+f,_=l-f,c=h+u,p=n*(h-u),y=m+c,d=_,b=-p,D=m-c,g=_,T=p;i[t]=y,i[t+1]=0,i[t+2]=d,i[t+3]=b,i[t+4]=D,i[t+5]=0,i[t+6]=g,i[t+7]=T};var i={exports:{}};!function(t,e){!function(t){const e=32768,a=32;var i;t.FrequencyScale=void 0,(i=t.FrequencyScale||(t.FrequencyScale={})).linear="linear",i.logarithmic="logarithmic",t.MAX_FFT_SIZE=e,t.MIN_FFT_SIZE=a,Object.defineProperty(t,"__esModule",{value:!0})}(e)}(0,i.exports);var s,n,o;!function(t){t[t.start=0]="start",t[t.stop=1]="stop",t[t.updateProcessorOptions=2]="updateProcessorOptions",t[t.frequencyDataAvailable=3]="frequencyDataAvailable",t[t.byteFrequencyDataAvailable=4]="byteFrequencyDataAvailable",t[t.timeDomainDataAvailable=5]="timeDomainDataAvailable",t[t.byteTimeDomainDataAvailable=6]="byteTimeDomainDataAvailable",t[t.getFloatFrequencyData=7]="getFloatFrequencyData",t[t.requestedFloatFrequencyDataAvailable=8]="requestedFloatFrequencyDataAvailable",t[t.getByteFrequencyData=9]="getByteFrequencyData",t[t.requestedByteFrequencyDataAvailable=10]="requestedByteFrequencyDataAvailable",t[t.getFloatTimeDomainData=11]="getFloatTimeDomainData",t[t.requestedFloatTimeDomainDataAvailable=12]="requestedFloatTimeDomainDataAvailable",t[t.getByteTimeDomainData=13]="getByteTimeDomainData",t[t.requestedByteTimeDomainDataAvailable=14]="requestedByteTimeDomainDataAvailable",t[t.startedListeningTo=15]="startedListeningTo",t[t.stoppedListeningTo=16]="stoppedListeningTo"}(s||(s={})),function(t){t.fftSize="fftSize",t.samplesBetweenTransforms="samplesBetweenTransforms",t.timeDomainSamplesCount="timeDomainSamplesCount",t.windowFunction="windowFunction",t.minDecibels="minDecibels",t.maxDecibels="maxDecibels",t.smoothingTimeConstant="smoothingTimeConstant"}(n||(n={})),function(t){t.rectangular="rectangular",t.blackman="blackman",t.nuttall="nuttall",t.blackmanNuttall="blackman-nuttall",t.blackmanHarris="blackman-harris",t.hann="hann",t.hamming="hamming",t.bartlett="bartlett"}(o||(o={}));const r=(t,e)=>.5-.5*Math.cos(2*Math.PI*t/(e-1)),l=(t,e)=>.54-.46*Math.cos(2*Math.PI*t/(e-1)),h=(t,e)=>.42-.5*Math.cos(2*Math.PI*t/(e-1))+.08*Math.cos(4*Math.PI*t/(e-1)),f=(t,e)=>.355768-.487396*Math.cos(2*Math.PI*t/(e-1))+.144232*Math.cos(4*Math.PI*t/(e-1))-.012604*Math.cos(6*Math.PI*t/(e-1)),u=(t,e)=>.35875-.48829*Math.cos(2*Math.PI*t/(e-1))+.14128*Math.cos(4*Math.PI*t/(e-1))-.01168*Math.cos(6*Math.PI*t/(e-1)),m=(t,e)=>.3635819-.4891775*Math.cos(2*Math.PI*t/(e-1))+.1365995*Math.cos(4*Math.PI*t/(e-1))-.0106411*Math.cos(6*Math.PI*t/(e-1)),_=(t,e)=>1-Math.abs(2*(t-.5*(e-1))/(e-1)),c=(t,e,a)=>{const i=t.length;for(let s=0;s<i;++s)t[s]=t[s]*e(s,i,a)},p={[o.rectangular]:()=>{},[o.hann]:t=>c(t,r),[o.hamming]:t=>c(t,l),[o.blackman]:t=>c(t,h),[o.blackmanNuttall]:t=>c(t,m),[o.blackmanHarris]:t=>c(t,u),[o.nuttall]:t=>c(t,f),[o.bartlett]:t=>c(t,_)},y=t=>20*Math.log10(t),d=(t,e,a)=>Math.min(Math.max(t,e),a);class b extends AudioWorkletProcessor{_samplesCount=0;_count=0;_first=!0;_fftAnalyser;_fftSize;_fftInput;_fftOutput;_lastTransform;_samplesBetweenTransforms;_windowFunction=o.blackman;_isListeningTo={frequencydata:!1,bytefrequencydata:!1,timedomaindata:!1,bytetimedomaindata:!1};_buffer=new Float32Array(i.exports.MAX_FFT_SIZE);_minDecibels=-100;_maxDecibels=-30;_smoothingTimeConstant=0;_portMap=new Map;_timeDomainSamplesCount;get _frequencyBinCount(){return this._fftSize/2}set frequencyBinCount(t){this._fftSize=2*t}get _isListeningToFrequencyData(){return this._isListeningTo.frequencydata||this._isListeningTo.bytefrequencydata}get _isListeningToTimeDomainData(){return this._isListeningTo.timedomaindata||this._isListeningTo.bytetimedomaindata}static get parameterDescriptors(){return[{name:"isRecording",defaultValue:1}]}constructor(t){super();const{fftSize:e,samplesBetweenTransforms:i,timeDomainSamplesCount:s,windowFunction:n=o.blackman,minDecibels:r,maxDecibels:l,smoothingTimeConstant:h}=t.processorOptions;this._fftAnalyser=new a(e),this._fftInput=new Float32Array(e),this._fftOutput=this._fftAnalyser.createComplexArray(),this._fftSize=e,this._lastTransform=new Float32Array(this._frequencyBinCount),this._samplesBetweenTransforms=i,this._timeDomainSamplesCount=s,this._samplesCount=0,this._windowFunction=n,this._minDecibels=r,this._maxDecibels=l,this._smoothingTimeConstant=h,this.port.onmessage=t=>this._onmessage(t.data)}_onmessage(t){switch(t.type){case s.getFloatFrequencyData:this._getFloatFrequencyData(t.id);break;case s.getByteFrequencyData:this._getByteFrequencyData(t.id);break;case s.getFloatTimeDomainData:this._getFloatTimeDomainData(t.id);break;case s.getByteTimeDomainData:this._getByteTimeDomainData(t.id);break;case s.startedListeningTo:this._isListeningTo[t.payload]=!0;break;case s.stoppedListeningTo:this._isListeningTo[t.payload]=!1;break;case s.updateProcessorOptions:{const{fftSize:e,samplesBetweenTransforms:a,timeDomainSamplesCount:i,windowFunction:s,minDecibels:n,maxDecibels:o,smoothingTimeConstant:r}=t.payload;void 0!==e&&(this._fftSize=e),void 0!==a&&(this._samplesBetweenTransforms=a),void 0!==i&&(this._timeDomainSamplesCount=i),void 0!==s&&(this._windowFunction=s),void 0!==n&&(this._minDecibels=n),void 0!==o&&(this._maxDecibels=o),void 0!==r&&(this._smoothingTimeConstant=r);break}}}_postMessage(t,e){this.port.postMessage(t,e)}_shouldFlushFrequencies(){return this._isListeningToFrequencyData&&this._samplesCount%this._samplesBetweenTransforms==0}_shouldFlushTimeDomainData(){return this._isListeningToTimeDomainData&&this._samplesCount%this._timeDomainSamplesCount==0}_appendToBuffer(t){this._buffer[this._samplesCount%this._buffer.length]=t,this._samplesCount=this._samplesCount+1,this._shouldFlushFrequencies()&&this._flushFrequencies(),this._shouldFlushTimeDomainData()&&this._flushTimeDomainSamples()}_updateFftInput(){this._fillArrayWithLastNSamples(this._fftInput),p[this._windowFunction](this._fftInput)}_fillArrayWithLastNSamples(t){const e=t.length,a=(this._samplesCount-e)%this._buffer.length;for(let i=0;i<e;i++)t[i]=a+i<0?0:this._buffer[(a+i)%this._buffer.length]}_convertFrequenciesToDb(t){const e=Math.min(this._lastTransform.length,t.length);if(e>0){const a=this._lastTransform;for(let i=0;i<e;++i)t[i]=y(a[i])}}_convertFrequenciesToByteData(t){const e=Math.min(this._lastTransform.length,t.length);if(e>0){const a=this._lastTransform,i=1/(this._maxDecibels-this._minDecibels);for(let s=0;s<e;++s){const e=a[s],n=255*(y(e)-this._minDecibels)*i;t[s]=d(0|n,0,255)}}}_convertTimeDomainDataToByteData(t,e){for(let a=0;a<t.length;++a)e[a]=d(128*(t[a]+1)|0,0,255)}_doFft(){this._fftAnalyser.realTransform(this._fftOutput,this._fftInput);const t=1/this._fftSize,e=d(this._smoothingTimeConstant,0,1);for(let a=0;a<this._lastTransform.length;a++){const i=Math.abs(Math.hypot(this._fftOutput[2*a],this._fftOutput[2*a+1]))*t;this._lastTransform[a]=e*this._lastTransform[a]+(1-e)*i}}_flushFrequencies(){if(this._updateFftInput(),this._doFft(),this._isListeningTo.frequencydata){const t=new Float32Array(this._frequencyBinCount);this._convertFrequenciesToDb(t),this._postMessage({type:s.frequencyDataAvailable,payload:t.buffer},[t.buffer])}if(this._isListeningTo.bytefrequencydata){const t=new Uint8Array(this._frequencyBinCount);this._convertFrequenciesToByteData(t),this._postMessage({type:s.byteFrequencyDataAvailable,payload:t.buffer},[t.buffer])}}_flushTimeDomainSamples(){if(this._isListeningTo.timedomaindata){const t=new Float32Array(this._timeDomainSamplesCount);this._fillArrayWithLastNSamples(t),this._postMessage({type:s.timeDomainDataAvailable,payload:t.buffer},[t.buffer])}if(this._isListeningTo.bytetimedomaindata){const t=new Float32Array(this._timeDomainSamplesCount);this._fillArrayWithLastNSamples(t);const e=new Uint8Array(this._timeDomainSamplesCount);this._convertTimeDomainDataToByteData(t,e),this._postMessage({type:s.byteTimeDomainDataAvailable,payload:e.buffer},[e.buffer])}}_getFloatFrequencyData(t){const e=new Float32Array(this._frequencyBinCount);this._updateFftInput(),this._doFft(),this._convertFrequenciesToDb(e),this._postMessage({id:t,type:s.requestedFloatFrequencyDataAvailable,payload:e.buffer},[e.buffer])}_getByteFrequencyData(t){this._updateFftInput(),this._doFft();const e=new Float32Array(this._timeDomainSamplesCount);this._fillArrayWithLastNSamples(e);const a=new Uint8Array(this._frequencyBinCount);this._convertFrequenciesToByteData(a),this._postMessage({id:t,type:s.requestedByteFrequencyDataAvailable,payload:a.buffer},[a.buffer])}_getFloatTimeDomainData(t){const e=new Float32Array(this._timeDomainSamplesCount);this._fillArrayWithLastNSamples(e),this._postMessage({id:t,type:s.requestedFloatTimeDomainDataAvailable,payload:e.buffer},[e.buffer])}_getByteTimeDomainData(t){const e=new Float32Array(this._timeDomainSamplesCount);this._fillArrayWithLastNSamples(e);const a=new Uint8Array(this._timeDomainSamplesCount);this._convertTimeDomainDataToByteData(e,a),this._postMessage({id:t,type:s.requestedByteTimeDomainDataAvailable,payload:a.buffer},[a.buffer])}process(t,e,a){const i=a.isRecording;for(let e=0;e<t.length;e++){if(1===i[e]&&t[0][0])for(let e=0;e<t[0][0].length;e++)this._appendToBuffer(t[0][0][e])}return!0}}registerProcessor("AdvancedAnalyserProcessor",b),t.AdvancedAnalyserProcessor=b,Object.defineProperty(t,"__esModule",{value:!0})}));
