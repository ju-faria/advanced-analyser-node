import { AdvancedAnalyserNode } from '@soundui/advanced-analyser-node';
import React from 'react';
declare type SpectrogramTypes = {
    audioSource: AudioNode;
    width: number;
    height: number;
    minFrequency: number;
    maxFrequency: number;
    timeWindow: number;
    currentTime: number;
    dynamicRange: number;
    dynamicRangeTop: number;
    modifierKeyCode?: string;
    onDynamicRangeChange: (value: number) => void;
    onDynamicRangeTopChange: (value: number) => void;
    onMaxFrequencyChange: (maxFrequency: number) => void;
    onMinFrequencyChange: (minFrequency: number) => void;
    onTimeWindowChange: (timeWindow: number) => void;
    onCurrentTimeChange: (currentTime: number) => void;
};
export declare type SpectrogramRendererHookProperties = {
    canvas: React.MutableRefObject<HTMLCanvasElement>;
    audioSource: AudioNode;
    isDataHandledExternally?: boolean;
    advancedAnalyserNode?: AdvancedAnalyserNode;
    data?: Uint8Array[];
    currentTime?: number;
};
export declare const Spectrogram: ({ width, height, minFrequency, maxFrequency, timeWindow, currentTime, audioSource, dynamicRange, dynamicRangeTop, onMaxFrequencyChange, onMinFrequencyChange, onTimeWindowChange, onCurrentTimeChange, modifierKeyCode, ...props }: SpectrogramTypes) => JSX.Element;
export {};
