!function(l,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((l="undefined"!=typeof globalThis?globalThis:l||self).advancedAnalyserNode={})}(this,(function(l){"use strict";var t,a,d,e;!function(l){l[l.start=0]="start",l[l.stop=1]="stop",l[l.updateProcessorOptions=2]="updateProcessorOptions",l[l.frequencyDataAvailable=3]="frequencyDataAvailable",l[l.byteFrequencyDataAvailable=4]="byteFrequencyDataAvailable",l[l.timeDomainDataAvailable=5]="timeDomainDataAvailable",l[l.byteTimeDomainDataAvailable=6]="byteTimeDomainDataAvailable",l[l.getFloatFrequencyData=7]="getFloatFrequencyData",l[l.requestedFloatFrequencyDataAvailable=8]="requestedFloatFrequencyDataAvailable",l[l.getByteFrequencyData=9]="getByteFrequencyData",l[l.requestedByteFrequencyDataAvailable=10]="requestedByteFrequencyDataAvailable",l[l.getFloatTimeDomainData=11]="getFloatTimeDomainData",l[l.requestedFloatTimeDomainDataAvailable=12]="requestedFloatTimeDomainDataAvailable",l[l.getByteTimeDomainData=13]="getByteTimeDomainData",l[l.requestedByteTimeDomainDataAvailable=14]="requestedByteTimeDomainDataAvailable",l[l.startedListeningTo=15]="startedListeningTo",l[l.stoppedListeningTo=16]="stoppedListeningTo"}(t||(t={})),function(l){l.fftSize="fftSize",l.samplesBetweenTransforms="samplesBetweenTransforms",l.timeDomainSamplesCount="timeDomainSamplesCount",l.windowFunction="windowFunction"}(a||(a={})),function(l){l.frequencydata="frequencydata",l.bytefrequencydata="bytefrequencydata",l.timedomaindata="timedomaindata",l.bytetimedomaindata="bytetimedomaindata"}(d||(d={})),function(l){l.rectangular="rectangular",l.blackman="blackman",l.nuttall="nuttall",l.blackmanNuttall="blackman-nuttall",l.blackmanHarris="blackman-harris",l.hann="hann",l.hamming="hamming",l.bartlett="bartlett"}(e||(e={}));const b=l=>{if(l&&0!=(l&l-1))throw new Error(`${l} is not a valid fftSize. fftSize has to be a power of 2`);if(l>32768)throw new Error(`${l} is above the maximum fftSize. Maximum fftSize is 32768`);if(l<32)throw new Error(`${l} is below the minimum fftSize. Maximum fftSize is 32`)},m=l=>{if(l<=0)throw new Error(`${l} is not a valid samplesBetweenTransform. samplesBetweenTransform needs to be above 0`)},Z=l=>{if(l<=0)throw new Error(`${l} is not a valid timeDomainSamplesCount. timeDomainSamplesCount needs to be above 0`)},s=l=>{if(!Object.values(e).includes(l))throw new Error(`${l} is not a valid windowFunction. Possible window functions are ${Object.values(e).map((l=>`'${l}'`)).join(", ")}`)};class c extends AudioWorkletNode{_portMapId=0;_portMap=new Map;_fftSize=1024;_samplesBetweenTransforms;_timeDomainSamplesCount;_windowFunction;get fftSize(){return this._fftSize}set fftSize(l){b(l),this._fftSize=l,this._postMessage({type:t.updateProcessorOptions,payload:{fftSize:l,...this._samplesBetweenTransforms?{}:{samplesBetweenTransforms:l},...this._timeDomainSamplesCount?{}:{timeDomainSamplesCount:l}}})}set samplesBetweenTransforms(l){m(l),this._samplesBetweenTransforms=l,this._updateProcessorOptions({samplesBetweenTransforms:l})}get samplesBetweenTransforms(){return this._samplesBetweenTransforms||this.fftSize}get frequencyBinCount(){return this.fftSize/2}set timeDomainSamplesCount(l){Z(l),this._timeDomainSamplesCount=l,this._updateProcessorOptions({timeDomainSamplesCount:l})}get timeDomainSamplesCount(){return this._timeDomainSamplesCount||this.fftSize}set windowFunction(l){s(l),this._windowFunction=l,this._updateProcessorOptions({windowFunction:l})}get windowFunction(){return this._windowFunction}_eventListenersCount={[d.frequencydata]:[],[d.bytefrequencydata]:[],[d.timedomaindata]:[],[d.bytetimedomaindata]:[]};constructor(l,t){const{fftSize:d=1024,samplesBetweenTransforms:b,timeDomainSamplesCount:m,windowFunction:Z=e.blackman}=t;super(l,"AdvancedAnalyserProcessor",{processorOptions:{[a.fftSize]:d,[a.samplesBetweenTransforms]:b||d,[a.timeDomainSamplesCount]:m||d,[a.windowFunction]:Z},numberOfInputs:1,numberOfOutputs:1,channelCount:1,channelCountMode:"max",channelInterpretation:"speakers"}),this._validateInputs(t),this._fftSize=d,this._samplesBetweenTransforms=b,this._timeDomainSamplesCount=m,this._windowFunction=Z,this.port.onmessage=l=>this._onmessage(l.data)}_validateInputs({fftSize:l,samplesBetweenTransforms:t,timeDomainSamplesCount:a,windowFunction:d}){b(l),void 0!==t&&m(t),void 0!==a&&Z(a),void 0!==d&&s(d)}_uniqId(){return this._portMapId++}_postMessage(l,t){this.port.postMessage(l,t)}onprocessorerror=l=>{console.log(`An error from AudioWorkletProcessor.process() occurred: ${l}`)};_onmessage(l){switch(l.type){case t.frequencyDataAvailable:this.dispatchEvent(new CustomEvent(d.frequencydata,{detail:new Float32Array(l.payload)}));break;case t.byteFrequencyDataAvailable:this.dispatchEvent(new CustomEvent(d.bytefrequencydata,{detail:new Uint8Array(l.payload)}));break;case t.timeDomainDataAvailable:this.dispatchEvent(new CustomEvent(d.timedomaindata,{detail:new Float32Array(l.payload)}));break;case t.byteTimeDomainDataAvailable:this.dispatchEvent(new CustomEvent(d.bytetimedomaindata,{detail:new Uint8Array(l.payload)}));break;case t.requestedFloatFrequencyDataAvailable:case t.requestedByteFrequencyDataAvailable:case t.requestedFloatTimeDomainDataAvailable:case t.requestedByteTimeDomainDataAvailable:{const{id:t,payload:a}=l,d=this._portMap.get(t);this._portMap.delete(t),d(a);break}}}_updateProcessorOptions(l){this._postMessage({type:t.updateProcessorOptions,payload:l})}_postIdentifiedDataRequest(l){return new Promise((a=>{const d=this._uniqId();this._portMap.set(d,(d=>{l===t.getByteFrequencyData||l===t.getByteTimeDomainData?a(new Uint8Array(d)):a(new Float32Array(d))})),this._postMessage({id:d,type:l})}))}getFloatFrequencyData(){return this._postIdentifiedDataRequest(t.getFloatFrequencyData)}getByteFrequencyData(){return this._postIdentifiedDataRequest(t.getByteFrequencyData)}getFloatTimeDomainData(){return this._postIdentifiedDataRequest(t.getFloatTimeDomainData)}getByteTimeDomainData(){return this._postIdentifiedDataRequest(t.getByteTimeDomainData)}_pushEventListener(l,a){const d=this._eventListenersCount[l];d.push(a),1===d.length&&this._postMessage({type:t.startedListeningTo,payload:l})}_removeEventListener(l,a){const d=this._eventListenersCount[l],e=d.indexOf(a);-1!==e&&(d.splice(e,1),0===d.length&&this._postMessage({type:t.stoppedListeningTo,payload:l}))}addEventListener(l,t,a){super.addEventListener(l,t,a),"processorerror"!==l&&this._pushEventListener(l,t)}removeEventListener(l,t,a){super.removeEventListener(l,t,a),"processorerror"!==l&&this._removeEventListener(l,t)}}l.AdvancedAnalyserNode=c,l.createAdvancedAnalyserNode=async(l,t)=>{await l.audioWorklet.addModule("data:application/javascript;base64,");return new c(l,{...t})},Object.defineProperty(l,"__esModule",{value:!0})}));
