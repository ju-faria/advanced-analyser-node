import { EventListenerTypes, WindowFunctionTypes } from "../types";
declare type AdvancedAnalyserNodeProperties = {
    fftSize?: number;
    samplesBetweenTransforms?: number;
    timeDomainSamplesCount?: number;
    windowFunction?: WindowFunctionTypes;
};
export declare class AdvancedAnalyserNode extends AudioWorkletNode implements AdvancedAnalyserNode {
    private _portMapId;
    private _portMap;
    private _fftSize;
    private _samplesBetweenTransforms?;
    private _timeDomainSamplesCount?;
    private _windowFunction;
    get fftSize(): number;
    set fftSize(value: number);
    set samplesBetweenTransforms(value: number);
    get samplesBetweenTransforms(): number;
    get frequencyBinCount(): number;
    set timeDomainSamplesCount(value: number);
    get timeDomainSamplesCount(): number;
    set windowFunction(value: WindowFunctionTypes);
    get windowFunction(): WindowFunctionTypes;
    private _eventListenersCount;
    constructor(context: BaseAudioContext, inputs: AdvancedAnalyserNodeProperties);
    private _validateInputs;
    private _uniqId;
    private _postMessage;
    onprocessorerror: (err: Event) => void;
    private _onmessage;
    private _updateProcessorOptions;
    private _postIdentifiedDataRequest;
    getFloatFrequencyData(): Promise<unknown>;
    getByteFrequencyData(): Promise<unknown>;
    getFloatTimeDomainData(): Promise<unknown>;
    getByteTimeDomainData(): Promise<unknown>;
    private _pushEventListener;
    private _removeEventListener;
    addEventListener(type: "processorerror" | EventListenerTypes, listener: EventListenerOrEventListenerObject | CustomEvent<ArrayBuffer>, options?: boolean | AddEventListenerOptions): void;
    removeEventListener(type: "processorerror" | EventListenerTypes, listener: EventListenerOrEventListenerObject | CustomEvent<ArrayBuffer>, options?: boolean | EventListenerOptions): void;
}
export declare const createAdvancedAnalyserNode: (context: BaseAudioContext, options: AudioWorkletNodeOptions & AdvancedAnalyserNodeProperties) => Promise<AdvancedAnalyserNode>;
export {};
